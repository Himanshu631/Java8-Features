UnaryOperator<T>:
Represents an operation on a single operand that produces a result of the same type as its operand.
Extends Function<T, T>.

BinaryOperator<T>:
Represents an operation upon two operands of the same type, producing a result of the same type as the operands.
Extends BiFunction<T, T, T>.

BiPredicate<T, U>:
Represents a predicate (boolean-valued function) of two arguments.
Contains a method test(T t, U u) to evaluate the predicate on the given arguments.

BiFunction<T, U, R>:
Represents a function that accepts two arguments and produces a result.
Contains a method apply(T t, U u) to apply the function to the given arguments.

BiConsumer<T, U>:
Represents an operation that accepts two input arguments and returns no result.
Contains a method accept(T t, U u) to perform the operation on the given arguments